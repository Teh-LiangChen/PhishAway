**
 * A Cloudflare Worker that proxies file‐scan and hash‐lookup
 * requests to VirusTotal, adding CORS headers and hiding your API key.
 */

const VT_API_KEY = 'hack_attack'; // put your VT key here

addEventListener('fetch', event => {
  const url = new URL(event.request.url);
  if (url.pathname.startsWith('/files/')) {
    const hash = url.pathname.split('/')[2];
    return event.respondWith(proxyGet(https://www.virustotal.com/api/v3/files/${hash}));
  }
  if (url.pathname === '/upload' && event.request.method === 'POST') {
    return event.respondWith(proxyPost(https://www.virustotal.com/api/v3/files, event.request));
  }
  // NEW: analysis endpoint
  if (url.pathname.startsWith('/analyses/')) {
    const analysisId = url.pathname.split('/')[2];
    return event.respondWith(proxyGet(https://www.virustotal.com/api/v3/analyses/${analysisId}));
  }
  return event.respondWith(new Response('Not found', { status: 404 }));
});


async function proxyGet(targetUrl, origReq) {
  const res = await fetch(targetUrl, {
    method: 'GET',
    headers: { 'x-apikey': VT_API_KEY }
  });
  return corsify(res);
}

async function proxyPost(targetUrl, origReq) {
  // Grab the original Content-Type (includes boundary)
  const contentType = origReq.headers.get("content-type");

  // Forward the body stream and the multipart Content-Type header
  const res = await fetch(targetUrl, {
    method: "POST",
    headers: {
      "x-apikey":     VT_API_KEY,
      "Content-Type": contentType
    },
    body: origReq.body
  });

  return corsify(res);
}

function corsify(response) {
  // Copy VT’s response, but add CORS to allow your extension to fetch it
  const headers = new Headers(response.headers);
  headers.set('Access-Control-Allow-Origin', '*');
  return new Response(response.body, {
    status:     response.status,
    statusText: response.statusText,
    headers
  });
}
